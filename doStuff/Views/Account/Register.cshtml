@model doStuff.Models.RegisterViewModel
@{
    ViewBag.Title = "register";
}

<h2 class="text-center login-title">@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-10 control-label col-md-offset-1" })
        <div class="col-md-10 col-md-offset-1">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-10 control-label col-md-offset-1" })
        <div class="col-md-10 col-md-offset-1">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-10 control-label col-md-offset-1" })
        <div class="col-md-10 col-md-offset-1">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @class = "col-md-10 control-label col-md-offset-1" })
        <div class="col-md-10 col-md-offset-1">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DisplayName, new { @class = "col-md-10 control-label col-md-offset-1" })
        <div class="col-md-10 col-md-offset-1">
            @Html.EditorFor(model => model.DisplayName)
            @Html.ValidationMessageFor(model => model.DisplayName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BirthYear, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control">
                @for (var i = 1900; i < 2015; i++)
                {
                    <option value="@i">@i</option>
                }
                @*Html.EditorFor(model => model.Age)*@
                @Html.ValidationMessageFor(model => model.BirthYear)
            </select>
        </div>
    </div>
     <div class="form-group">
        @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control">
                <option value="0">Male</option>
                <option value="1">Female</option>
                @Html.ValidationMessageFor(model => model.Gender)
            </select>
        </div>
    </div>

    <div class="form-group login-buttons">
        <div class="col-md-5 col-md-offset-1">
            <input type="submit" class="btn btn-default confirm" value="register" />
        </div>
        <div class="col-md-5">
            @Html.ActionLink("cancel", "Login", null, new { @class = "btn btn-default cancel" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
