@model doStuff.ViewModels.GroupFeedViewModel
@using doStuff.ViewModels

<div class="pull-right right-sidebar">
    <!--Group name-->
    <div class="sidebar-title-box">
        <h3 class="group-title">@Model.Group.Name</h3>
        @using (Html.BeginForm("RemoveMember", "Group", FormMethod.Post, new { @class = "leave-group" }))
        {
            @Html.Hidden("memberId", Model.SideBar.User.UserID)
            @Html.Hidden("groupId", Model.Group.GroupID)
            <button type="submit" class="btn btn-primary sidebar-button group-sidebar-button">
                <i class="glyphicon glyphicon-remove x-button"></i>
            </button>
        }
    </div>
    <div class="friends-title">Members</div>
    <!--List of members-->
    <div class="friend-list-box">
        <ul>
            @if (Model.SideBar.UserList.Count > 0) {
                if (Model.SideBar.User.UserID == Model.Group.OwnerId)
                {
                    foreach (var user in Model.SideBar.UserList)
                    {
                        <li class="eventfeed-friend" id=@Html.Raw("member" + user.UserID)>
                            @if (user.UserID != Model.Group.OwnerId)
                            {
                                using (Html.BeginForm("RemoveMember", "Group", FormMethod.Post, new { @class = "remove-member" }))
                                {
                                    @Html.Hidden("memberId", user.UserID)
                                    @Html.Hidden("groupId", Model.Group.GroupID)
                                    <form class="form-inline">
                                        <div class="form-group">
                                            <button type="submit" class="btn btn-primary sidebar-button">
                                                <i class="glyphicon glyphicon-remove x-button"></i>
                                            </button>
                                            <div class="friend-display-name">@user.DisplayName</div>
                                        </div>
                                    </form>
                                }
                            }
                        </li>
                    }
                }
                else
                {
                    foreach (var user in Model.SideBar.UserList)
                    {
                        <li>@user.DisplayName</li>
                    }
                }
            }
            else
            {
                if (Model.SideBar.User.UserID == Model.Group.OwnerId)
                {
                    <li class="friend-display-no-friends">
                        you currently have no other members in your group, 
                        you can add your friends via the field below
                    </li>
                }
                else
                {
                    <li class="friend-display-no-friends">
                        you have been left stranded in this group, you can
                         stay or leave by removing yourself from the group
                    </li>
                }
            }
        </ul>
    </div>
    <!--Add Member if owner-->
        @if (Model.SideBar.User.UserID == Model.Group.OwnerId)
        {
            <div class="add-friend-box">
            @using (Html.BeginForm("AddMember", "Group", FormMethod.Post, new { @class = "add-member" }))
            {
                <form class="form-inline">
                    <div class="form-group add-friend-form">
                        @Html.Hidden("groupId", Model.Group.GroupID)
                        <label class="sr-only" for="add-friend">add friend</label>
                        <input name="groupid" type="hidden" value="@Model.Group.GroupID">
                        <input type="text" name="username" class="form-control add-friend-field" id="add-friend" placeholder="enter the username...">
                        <button type="submit" class="btn btn-default add-button">add</button>
                    </div>
                </form>
            }
            </div>
        }
        <div class="events-title">Upcoming Events</div>
    <!--List of upcoming events-->
    <div class="event-list">
        @if (Model.SideBar.EventList.Count != 0)
        {
            <ul>
                @foreach (var thisEvent in Model.SideBar.EventList)
                {

                    if ((bool)thisEvent.Attending && thisEvent.State == State.ON)
                    {
                        <li>
                            <a href="@Html.Raw("#event-link" + thisEvent.Event.EventID)">
                                <div class="uppcoming-event-name">@thisEvent.Event.Name</div>
                                <div>@String.Format("{0:d MMM yyyy}", thisEvent.Event.TimeOfEvent)</div>
                                <div>@String.Format("{0:HH:mm}", thisEvent.Event.TimeOfEvent)</div>
                                <div class="uppcoming-event-location">At @thisEvent.Event.Location</div>
                                <div class="divider-event"></div>
                            </a>
                        </li>
                    }
                }
            </ul>
        }
        else
        {
            <p>you currently have no upcoming events</p>
        }
    </div>
</div>
