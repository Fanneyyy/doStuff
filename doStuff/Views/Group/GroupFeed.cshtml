@model doStuff.ViewModels.GroupFeedViewModel

@foreach (var item in Model.Events)
{
    <div class="row event-box">
        <div class="col-md-12 event-banner">
            <div class="row">
                <div class="col-md-4 event-owner">@item.Owner</div>
                <div class="col-md-3 event-group">
                </div>
                <div class="col-md-2 event-countdown">@item.Event.Minutes</div>
                <div class="col-md-3 event-name">@item.Event.Name</div>
            </div>
        </div>
        <div class="col-md-12 event-middle">
            <div class="row">
                <div class="col-md-6 event-photo-time-location">
                    <div class="row">
                        <div class="col-md-12 event-photo-space"></div>
                    </div>
                    <div class="row event-time-place">
                        <div class="col-md-6 event-time">@String.Format("{0:d MMM yyyy}", item.Event.TimeOfEvent) <br /> @String.Format("{0:HH:mm}", item.Event.TimeOfEvent)</div>
                        <div class="col-md-6 event-location">@item.Event.Location</div>
                    </div>
                </div>
                <div class="col-md-6 event-description-buttons">
                    <div class="row">
                        <div class="col-md-12 event-description">@item.Event.Description</div>
                    </div>
                    @if (item.Attending == null)
                    {
                        using (Html.BeginForm("AnswerEvent", "Group"))
                        {
                            <input name="groupid" type="hidden" value="@item.Event.GroupId">
                            <input name="eventId" type="hidden" value="@item.Event.EventID">
                            <div class="row">
                                <div class="col-md-12 btn-group">
                                    <button type="submit" class="btn btn-primary join-event" name="answer" value="True">join</button>
                                    <button type="submit" class="btn btn-primary decline-event" name="answer" value="False">decline</button>
                                </div>
                            </div>
                            @Html.ValidationSummary(false)
                        }
                    }
                    else if (item.Attending == true)
                    {
                        <div class="row event-join-decline">
                            <div class="col-md-12 event-joined">You Have Joined!</div>
                        </div>
                    }
                    else
                    {
                        <div class="row event-join-decline">
                            <div class="col-md-12 event-declined">You Have Declined!</div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="comment-title">comments</div>
        @foreach (var comment in item.CommentsViewModels)
        {
            <div class="row comment">
                <div class="col-md-2 comment-owner">@comment.Owner.DisplayName</div>
                <div class="col-md-8 comment-content">@comment.Comment.Content</div>
                <div class="col-md-2 comment-time">@String.Format("{0:d MMM yyyy}", comment.Comment.CreationTime)</div>
            </div>
        }
        @using (Html.BeginForm("Comment", "Group"))
        {
            <input name="eventId" type="hidden" value="@item.Event.EventID" />
            <div class="row comment">
                <div class="col-md-2 comment-owner comment-comment">comment:</div>
                <div class="form-group">
                    <span class="col-md-8 comment-text-field">
                        <input type="text" name="content" placeholder="write something clever..." />
                    </span>
                    <div class="col-md-2 comment-button">
                        <input type="submit" value="post" class="btn btn-default" />
                    </div>
                </div>
            </div>
            @Html.ValidationSummary(false)
        }
   </div>
}


