@using doStuff.ViewModels
@using doStuff.Models.DatabaseModels
@model doStuff.ViewModels.EventFeedViewModel

<ul id="event-feed">
    @foreach (var item in Model.Events)
    {
        <li class="event-list-item">
            <span id=@Html.Raw("event-link" + item.Event.EventID)>&nbsp;</span>
                <div class="event-box" id=@Html.Raw("event" + item.Event.EventID)>
                    <div class="event-banner">
                        <!--Event owner and group (if is a part of)-->
                            <div class="col-md-6 col-sm-12 event-banner-upper event-owner">@item.Owner</div>
                            <div class="col-md-6 col-sm-12 event-banner-upper event-group">
                                @if (item.Event.GroupId != null)
                                {
                                    foreach (var i in Model.Groups)
                                    {
                                        if (i.GroupID == item.Event.GroupId)
                                        {
                                            @i.Name
                                        }
                                    }
                                }
                        </div>
                        <!--Event Name and countdown or state-->
                        @if (item.State == State.ON)
                        {
                            if (item.Event.TimeOfEvent <= DateTime.Now)
                            {
                                <div class="col-md-12 event-banner-lower event-banner-over">
                                    <div class="col-md-6 col-sm-12 event-name">@item.Event.Name</div>
                                    <div class="col-md-6 col-sm-12 event-state">This event has passed</div>
                                </div>
                            }
                            else
                            {
                                <div class="col-md-12 event-banner-lower event-banner-on">
                                    <div class="col-md-6 col-sm-12 event-name">@item.Event.Name</div>
                                    <div class="col-md-6 col-sm-12 event-state">This event is ON</div>
                                </div>
                            }
                        }
                        else if (item.State == State.OFF)
                        {
                            <div class="col-md-12 event-banner-lower event-banner-off">
                                <div class="col-md-6 col-sm-6 col-sm-offset-3 event-name">@item.Event.Name</div>
                                <div class="col-md-6 col-sm-6 col-sm-offset-3 event-state">This event was canceled</div>
                            </div>
                        }
                        else if (item.State == State.FULL)
                        {
                            <div class="col-md-12 event-banner-lower event-banner-full">
                                <div class="col-md-6 col-sm-12 event-name">@item.Event.Name</div>
                                <div class="col-md-6 col-sm-12 event-state">This Event is FULL</div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-12 event-banner-lower event-banner-countdown">
                                <div class="col-md-6 col-sm-6 col-sm-offset-2 event-name">@item.Event.Name</div>
                                <div class="col-md-6 col-sm-6 col-sm-offset-2 event-state">
                                    <span class="countdown" data-minutes="@item.Event.Minutes" data-created="@item.TimeCreated" data-eventid=@item.Event.EventID></span>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-md-12 event-middle">
                        <div class="row">
                            <div class="col-md-6 event-photo-time-location-@item.Event.Photo">
                                <div class="row">
                                    @if (item.State == State.ON)
                                    {
                                        <div class="event-photo-space-attendees">
                                            <ul>
                                                <li><h4>Attendees:</h4></li>
                                                @foreach (var i in item.Attendees)
                                                {
                                                    <li>
                                                        @i.DisplayName
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-12 event-photo-space"></div>
                                    }

                                </div>
                                <div class="row event-time-place">
                                    <div class="col-md-6 event-time">
                                        @String.Format("{0:d MMM yyyy}", item.Event.TimeOfEvent)
                                    <br /> @String.Format("{0:HH:mm}", item.Event.TimeOfEvent)
                                </div>
                                <div class="col-md-6 event-location">@item.Event.Location</div>
                            </div>
                        </div>
                        <div class="col-md-6 event-description-buttons">
                            <div class="row">
                                <div class="col-md-12 event-description">
                                    @item.Event.Description
                                </div>
                            </div>
                            <div class="hidden" id=@Html.Raw("form-result" + item.Event.EventID)>
                                <div class="col-md-12 event-joined">You Have Joined!</div>
                                <div class="col-md-12 event-declined">You Have Declined!</div>
                            </div>
                            @if (item.Attending == null)
                            {
                                using (Html.BeginForm("AnswerEvent", "User", FormMethod.Post, new { @id = @Html.Raw("eventform" + item.Event.EventID) }))
                                {
                                    <input name="eventId" type="hidden" value="@item.Event.EventID" />
                                    <div class="row">
                                        <div class="col-md-12 btn-group">
                                            <button type="submit" class="btn btn-primary join-event" name="answer" value="True">join</button>
                                            <button type="submit" class="btn btn-primary decline-event" name="answer" value="False">decline</button>
                                        </div>
                                    </div>
                                    @Html.ValidationSummary(false)
                                }
                            }
                            else if (item.Attending == true)
                            {
                                if (item.State == State.OFF)
                                {
                                    <div class="row event-join-decline">
                                        @using (Html.BeginForm("AnswerEvent", "User", FormMethod.Post, new { @class = "remove-event" }))
                                        {
                                            <input name="eventId" type="hidden" value="@item.Event.EventID" />
                                            <input name="answer" type="hidden" value="False" />
                                    <!--<div class="row event-join-decline">-->
                                            <button type="submit" class="btn btn-primary event-declined">OK, Remove this :(</button>
                                            @Html.ValidationSummary(false)
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="row event-join-decline">
                                        <div class="col-md-12 event-joined">You Have Joined!</div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="row event-join-decline">
                                    <div class="col-md-12 event-declined">You Have Declined!</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="comment-title">
                    comments
                    <i class="glyphicon glyphicon-plus comment-plus"></i>
                    <i class="glyphicon glyphicon-minus comment-minus"></i>
                    <span class="comments-number"> this event has @item.CommentsViewModels.Count comments</span>
                </div>
                <div class="all-comments">
                    @foreach (var comment in item.CommentsViewModels)
                    {
                        <div class="row comment">
                            <div class="col-md-2 comment-owner">@comment.Owner.DisplayName</div>
                            <div class="col-md-8 comment-content">@comment.Comment.Content</div>
                            @if (comment.Comment.CreationTime.Date == DateTime.Now.Date)
                            {
                                <div class="col-md-2 comment-time">Today, @String.Format("{0:t}", comment.Comment.CreationTime)</div>
                            }
                            else
                            {
                                <div class="col-md-2 comment-time">@String.Format("{0:d MMM yyyy}", comment.Comment.CreationTime)</div>
                            }
                        </div>
                    }
                    @using (Html.BeginForm("Comment", "User", FormMethod.Post, new { @class = "event-comment-form" }))
                    {
                        <input name="eventId" type="hidden" value="@item.Event.EventID" />
                        <div class="row comment">
                            <div class="col-md-2 comment-owner comment-comment">comment:</div>
                            <div class="form-group">
                                <span class="col-md-8 comment-text-field">
                                    <input type="text" name="content" placeholder="write something clever..." />
                                </span>
                                <div class="col-md-2 comment-button">
                                    <input type="submit" value="post" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(false)
                    }
                </div>
            </div>
</li>
    }
</ul>