@model doStuff.ViewModels.EventFeedViewModel
@using doStuff.ViewModels;

@if (Model.SideBar.UserRequestList.Count + Model.SideBar.UserPendingList.Count + Model.SideBar.UserPendingList.Count > 0) {
    if (Model.SideBar.UserRequestList.Count > 0 || Model.SideBar.UserPendingList.Count > 0)
    {
        <li class="friend-requests-title">you have unanswered friend requests</li>
    }
    foreach (var user in Model.SideBar.UserRequestList)
    {
        <li class="eventfeed-friend request-list" id=@Html.Raw("friend" + user.UserID)>
            <form class="form-inline">
                    @using (Html.BeginForm("DeclineFriendRequest", "User", FormMethod.Post, new { @class = "remove-friend" }))
                    {
                        <input name="requesterId" type="hidden" value="@user.UserID">
                        <button type="submit" class="btn btn-primary sidebar-button">
                            <i class="glyphicon glyphicon-remove x-button"></i>
                        </button>
                    }
                    @using (Html.BeginForm("AcceptFriendRequest", "User", FormMethod.Post, new { @class = "add-friend" }))
                    {
                        <input name="requesterId" type="hidden" value="@user.UserID">
                        <button type="submit" class="btn btn-primary sidebar-button">
                            <i class="glyphicon glyphicon-ok v-button"></i>
                        </button>
                    }
                    <div class="friend-display-name">@user.DisplayName</div>
            </form>
        </li>
    }
    foreach (var user in Model.SideBar.UserPendingList)
    {
        <li class="eventfeed-friend" id=@Html.Raw("friend" + user.UserID)>
            @using (Html.BeginForm("RemoveFriend", "User", FormMethod.Post, new { @class = "remove-friend" }))
            {
                <form class="form-inline">
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary sidebar-button">
                            <i class="glyphicon glyphicon-remove x-button"></i>
                        </button>
                        <input name="friendId" type="hidden" value="@user.UserID" />
                        <div class="friend-display-name">@user.DisplayName</div>
                    </div>
                </form>
            }
        </li>
    }
    if (Model.SideBar.UserRequestList.Count > 0 || Model.SideBar.UserPendingList.Count > 0)
    {
        <li class="friend-requests-title">your friends</li>
        if (Model.SideBar.UserList.Count == 0)
        {
            <li class="friend-display-no-friends">
            you currently have no friends, you might need to answer friend requests, wait for
            responses or add more friends
            </li>
        }
    }
    foreach (var user in Model.SideBar.UserList)
    {
        <li class="eventfeed-friend" id=@Html.Raw("friend" + user.UserID)>
            @using (Html.BeginForm("RemoveFriend", "User", FormMethod.Post, new { @class = "remove-friend" }))
            {
                <form class="form-inline">
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary sidebar-button">
                            <i class="glyphicon glyphicon-remove x-button"></i>
                        </button>
                        <input name="friendId" type="hidden" value="@user.UserID" />
                        <div class="friend-display-name">@user.DisplayName</div>
                    </div>
                </form>
            }
        </li>
    }
}
else
{
    <li class="friend-display-no-friends">
    you currently have no friends, input a friend's username
     into the field below to send a friend request</li>
}